@use "sass:map";
@use "sass:meta";
@use "@angular/material" as mat;
@use "app/to-replace/ng-mat-core/theming";

$condition-specs: (
  amount: (
    palette: mat.$azure-palette,
    hue: 60,
  ),
  cloud: (
    palette: mat.$blue-palette,
    variant: secondary,
    hue: 70,
  ),
  dew: (
    palette: mat.$cyan-palette,
    hue: 70,
  ),
  feel: (
    palette: mat.$rose-palette,
    hue: 80,
  ),
  temp: (
    palette: mat.$red-palette,
    hue: 60,
  ),
  wind: (
    palette: mat.$yellow-palette,
    hue: 95,
  ),
);

@mixin define-custom-property($name, $value) {
  #{'--' + $name}: $value;
}

@mixin condition-colors($condition, $spec, $type) {
  $theme: mat.define-theme(
    (
      color: (
        theme-type: $type,
        primary: map.get($spec, palette),
      ),
    )
  );
  $variant: map.get($spec, variant) or primary;
  :root {
    @include define-custom-property(
      $condition,
      mat.get-theme-color($theme, $variant, map.get($spec, hue))
    );
  }
  .#{$condition} {
    @include mat.slide-toggle-color($theme, $color-variant: $variant);
  }
}

@each $condition, $spec in $condition-specs {
  @include condition-colors($condition, $spec, "dark");
  @media (prefers-color-scheme: light) {
    @include condition-colors($condition, $spec, "light");
  }
}
