@use "@angular/material" as mat;
@use "../node_modules/@s-libs/ng-mat-core/theming";
@use "sass:map" as map;
@import "conditions";

$primary-palette: mat.define-palette(mat.$indigo-palette, 400);
$accent-palette: mat.define-palette(mat.$blue-grey-palette, A400, A100, A700);

$main-palettes: (
  primary: $primary-palette,
  accent: $accent-palette,
);

@include theming.full-theming(
  $dark-palettes: $main-palettes,
  $light-palettes: $main-palettes
);

@each $condition, $palette in $condition-palettes {
  $cur-palettes: (
    primary: $primary-palette,
    accent: $palette,
  );
  $cur-config: (
    dark-palettes: $cur-palettes,
    light-palettes: $cur-palettes,
    modules: (
      "core",
      "slide-toggle",
    ),
  );

  .#{$condition} {
    @include theming.dark-theme-colors($cur-config);
    @media (prefers-color-scheme: light) {
      @include theming.light-theme-colors($cur-config);
    }
  }
}

@mixin shaped-toggle($clip-path) {
  --mdc-switch-handle-shape: 0;

  .mdc-switch__handle {
    clip-path: $clip-path;

    & > * {
      display: none;
    }
  }
}

.openWeather {
  @include shaped-toggle(polygon(0% 50%, 50% 0%, 100% 50%, 50% 100%));
}

.visualCrossing {
  @include shaped-toggle(
    polygon(
      0% 15%,
      15% 0%,
      50% 35%,
      85% 0%,
      100% 15%,
      65% 50%,
      100% 85%,
      85% 100%,
      50% 65%,
      15% 100%,
      0% 85%,
      35% 50%
    )
  );
}

.weatherGov {
  @include shaped-toggle(circle(50%));
}

.weatherUnlocked {
  @include shaped-toggle(polygon(0% 90%, 50% 0%, 100% 90%));
}

a {
  color: mat.get-color-from-palette($accent-palette);
}
